generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.

model address {
  email          String @db.VarChar(50)
  street_address String @db.Text
  city           String @db.VarChar(50)
  state          String @db.VarChar(50)
  postal_code    String @db.VarChar(50)
  country        String @db.VarChar(50)
  phone          String @db.VarChar(50)

  user           users  @relation(fields: [email], references: [email], onDelete: Cascade)
  
  @@id([email]) // กำหนดให้ email เป็น primary key
  @@index([email], map: "fk_address") // ดัชนีบน email เพื่อการเชื่อมโยงที่รวดเร็ว
}

model billing {
  order_id       Int     @id @default(autoincrement())
  email          String  @db.VarChar(50)
  promotion_id   String  @db.VarChar(50)
  amount         Int
  vat            Int
  price          Int
  total_price    Int
  status         String  @db.VarChar(15)
  img_bill       String  @db.VarChar(255)
  billing_detail billing_detail[] 

  @@index([promotion_id], map: "fk_billing_promotion_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model billing_detail {
    product_id  Int
    order_id    Int
    unit        Int
    price       Int
    total_price Int
    quantity    Int
    billing     billing @relation(fields: [order_id], references: [order_id], onUpdate: Restrict, map: "fk_billing_detail_order")
    products    products @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "fk_billing_detail_product")

    @@id([order_id, product_id]) // ใช้การกำหนด composite primary key
    @@index([order_id], map: "fk_billing_detail_order")
    @@index([product_id], map: "fk_billing_detail_product")
}

model products {
  id              Int     @id @default(autoincrement())
  description     String           @db.Text
  unit            String           @db.VarChar(50)
  price           Float
  img             String           @db.VarChar(250)
  size            String           @db.VarChar(50)
  type            String           @db.VarChar(50)
  discount_price  Float
  is_on_promotion Boolean          @default(false)
  quantity        Int              @default(0)
  billing_detail  billing_detail[]
}

model promotion {
  id            Int       @id @default(autoincrement())
  description   String    @db.Text
  status        String    @db.VarChar(50)
  discount      Int
  start_duedate DateTime? @db.Timestamp(0)
  end_duedate   DateTime? @db.Timestamp(0)
}

model users {
  email    String    @id @db.VarChar(50)
  password String    @db.VarChar(250)
  role     String?   @default("user") @db.VarChar(50)
  address  address[] 
}
